/*
 * Please see the included README.md file for license terms and conditions.
 */


// This file is a suggested starting place for your code.
// It is completely optional and not required.
// Note the reference that includes it in the index.html file.


/*jslint browser:true, devel:true, white:true, vars:true */
/*global $:false, intel:false app:false, dev:false, cordova:false */


// For improved debugging and maintenance of your app, it is highly
// recommended that you separate your JavaScript from your HTML files.
// Use the addEventListener() method to associate events with DOM elements.

// For example:

// var el ;
// el = document.getElementById("id_myButton") ;
// el.addEventListener("click", myEventHandler, false) ;



// The function below is an example of the best way to "start" your app.
// This example is calling the standard Cordova "hide splashscreen" function.
// You can add other code to it or add additional functions that are triggered
// by the same event or other events.

function onAppReady() {
    if( navigator.splashscreen && navigator.splashscreen.hide ) {   // Cordova API detected
        navigator.splashscreen.hide() ;
    }
}
document.addEventListener("app.Ready", onAppReady, false) ;
// document.addEventListener("deviceready", onAppReady, false) ;
// document.addEventListener("onload", onAppReady, false) ;

// The app.Ready event shown above is generated by the init-dev.js file; it
// unifies a variety of common "ready" events. See the init-dev.js file for
// more details. You can use a different event to start your app, instead of
// this event. A few examples are shown in the sample code above. If you are
// using Cordova plugins you need to either use this app.Ready event or the
// standard Crordova deviceready event. Others will either not work or will
// work poorly.

// NOTE: change "dev.LOG" in "init-dev.js" to "true" to enable some console.log
// messages that can help you debug Cordova app initialization issues.
/*Menu-toggle*/
  $(document).ready(function () {
  var trigger = $('.hamburger'),
      overlay = $('.overlay'),
     isClosed = false;

    trigger.click(function () {
      hamburger_cross();
      var img = $('.img').css('width: 100px;height: 100px;position: fixed;bottom:0;margin:0;padding:0;');
    });

    function hamburger_cross() {

      if (isClosed == true) {
        overlay.hide();
        trigger.removeClass('is-open');
        trigger.addClass('is-closed');
        isClosed = false;
      } else {
        overlay.show();
        trigger.removeClass('is-closed');
        trigger.addClass('is-open');
        isClosed = true;
      }
  }

  $('[data-toggle="offcanvas"]').click(function () {
        $('#wrapper').toggleClass('toggled');
  });
});

  $(document).ready(function(){
        $("#logout").click(function(){
            localStorage.login="false";
            localStorage.id='';
            window.location.href = "login.html";
        });
      $.ajaxSetup({
          headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json',
              'Access-Control-Allow-Origin': 'http://localhost:8000/api/',
              'Access-Control-Allow-Headers': '*',
              'Access-Control-Allow-Credentials': true,
              //'X-Requested-With ': 'XMLHttpRequest',
              'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
          }
      });
      $.ajax({
          type: "get",
          url: "http://localhost:8000/api/topics",
          dataType: "jsonp",
          success: function(data, textStatus, xhr){
              console.log(data);
              alert('hi');
          }
      });
    });



$("#btn-login").click(function(){
    var id_num=$("#id_num").val();
    var phone=$("#phone").val();
    var grant_type = "password";
    var client_id = "2";
    var client_secret = "xoXDsP8SQ9DsE3tDU820Zb3vfv4YNE915ppeBFZF";
    var scope = "*";
    var dataString="grant_type"+grant_type+"&client_id"+client_id+"&client_secret"+client_secret+"&username="+id_num+"&password="+phone+"&btn-scope"+scope;
    if($.trim(id_num).length>0 & $.trim(phone).length>0)
    {
        $.ajaxSetup({
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Headers': '*',
                'Access-Control-Allow-Credentials': true,
                //'X-Requested-With ': 'XMLHttpRequest',
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });
        $.ajax({
            type: "post",
            url: "http://localhost:8000/oauth/token",
            dataType: "json",
            data: dataString,
            crossDomain: true,
            cache: false,
            beforeSend: function(){ $("#btn-login").html('Connecting...');},
            success: function(data){
                    console.log(data);
                    localStorage.login="true";
                    window.location.href = "index.html";
            }
        });
    }
    else
    {
        $("#main_alert").html('<div class="alert alert-danger" role="alert">يجب التأكد من جميع الفراغات</div>');
    }
});
